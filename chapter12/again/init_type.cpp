/* ===================================

【初始化的方法】

默认初始化
直接初始化
圆括号的构造方式
列表初始化，花括号{}
值初始化

初始化的方式：
	1.直接初始化和拷贝初始化


直接初始化和拷贝初始化：
	1.使用等号(=)初始化一个变量，是拷贝初始化
	2.反之，是直接初始化

列表初始化：


大多数情况下这些不同的初始化方式是可以相互等价使用，不过事实也并非一直如此。有如下例外情况：
1.使用拷贝初始化(=)时，只能提供一个初始值
2.如果提供的是一个类内初始值，则只能使用拷贝初始化、或花括号的形式初始化
3.如果提供的是初始元素值的列表，则只能把初始值都放在花括号里进行列表初始化，而不能放在圆括号里

*/


#include <iostream>
#include <string>
#include <vector>
using namespace std;

// 直接初始化和拷贝初始化
void test1()
{
	string s1 = "hiya";  // 拷贝初始化
	string s2("hiya");   // 直接初始化
	string s3(10, 'c');  // 直接初始化

}


// 列表初始化
void test2()
{
	// 列表初始化
	vector<string> articles = {"a", "an", "the"};
	vector<string> v1{"a", "an", "the"};

	// 错误
	// vector<string> v2("a", "an", "the");

	vector<int> ivec(10, -1);  // 
}

int main()
{

	return 0;
}
